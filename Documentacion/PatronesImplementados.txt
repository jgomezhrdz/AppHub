Patrones de Creación (2)
    - Singleton: Cada servicio es singleton (mañana especifico)
    - Factory Method: hay dos factorias aplicadas junto con el patron Strategy.
        -   Factoria de login
        -   Factoria de Registro
        Ambas sirven para crear la estrategia correspondiente para la peticion a la base de datos,
        Una para registrar usuario o guest y otra para el login del usuario o guest
Patrones Estructurales (3)
    - Fachada de la base de datos: Se tiene creada una fachada que englobe los servicios
    que contengan peticiones a la base de datos, ya sea crear, eliminar, login...
    - Bride: implementado para el buscador de videos offline. La abstraccion funcional sería el buscador
    y las implementaciones serían las formas de busqueda, por titulo y por id, devolviendo cada uno
    aquellos que contienen un porcentaje similar al 50%.
    - Decorator: se aplica un decorador de tipo usuario admin para mejorar la funcionalidad del usuario comun
    añadiendo los métodos de download correspondientes (musica y videos)

Patrones de Comportamiento (2)
    -   Estrategia: engloba la estrategia correspondiente, hay dos implementadas:
        -   Registro de usuarios: una estrategia para la creacion de usuario y otra para la creacion 
        de guest
        -   Login de usuarios: una estrategia para el login de usuario y otra para el login 
        de guest
    -   State: se ha implementado el control de estados de la aplicación mediante el patrón State,
        indicando si esta offline, sin loggear o loggeado, ejecutando el consiguiente estado
        correspondiente.